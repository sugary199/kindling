load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake", "configure_make", "make")

package(default_visibility = ["//visibility:public"])


configure_make(
    name = "zmq_build",
    autogen = True,
    lib_source = "@lib_zmq//:all",
    make_commands = [
	    "make install",
    ],
    out_static_libs = ["libzmq.a"],
)

cmake(
    name = "agent-libs_build",
    tags = ["requires-network","--sandbox_default_allow_network"],
    cache_entries = {
        "BUILD_LIBSCAP_EXAMPLES": "OFF",
        "MINIMAL_BUILD": "ON",
        "CREATE_TEST_TARGETS": "OFF",
        "BUILD_LIBSINSP_EXAMPLES": "ON",
        "CMAKE_C_COMPILER": "/usr/bin/gcc-10",
        "CMAKE_CXX_COMPILER": "/usr/bin/g++-10",
        "BUILD_DRIVER": "OFF",
        "CMAKE_TOOLCHAIN_FILE" : "",
    },
    lib_source = "@agent-libs//:all",
    postfix_script = "cp ./libsinsp/libsinsp.a $INSTALLDIR/lib/libsinsp.a && cp ./tbb-prefix/src/tbb/build/lib_release/libtbb.a $INSTALLDIR/lib/libtbb.a && cp ./tbb-prefix/src/tbb/build/lib_release/libtbbmalloc.a $INSTALLDIR/lib/libtbbmalloc.a && cp ./libscap/libscap.a $INSTALLDIR/lib/libscap.a && mkdir $INSTALLDIR/include/userspace \
    && mkdir $INSTALLDIR/include/userspace/async \
    && mkdir $INSTALLDIR/include/userspace/common \
    && mkdir $INSTALLDIR/include/userspace/libscap \
    && mkdir $INSTALLDIR/include/userspace/libsinsp \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/async/*.h $INSTALLDIR/include/userspace/async \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/common/*.h $INSTALLDIR/include/userspace/common \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libscap/*.h $INSTALLDIR/include/userspace/libscap \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/*.h $INSTALLDIR/include/userspace/libsinsp \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/container_engine \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/container_engine/*.h $INSTALLDIR/include/userspace/libsinsp/container_engine \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/container_engine/docker \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/container_engine/docker/*.h $INSTALLDIR/include/userspace/libsinsp/container_engine/docker \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/include \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/include/*.h $INSTALLDIR/include/userspace/libsinsp/include \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/third-party \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/third-party/*.h $INSTALLDIR/include/userspace/libsinsp/third-party \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/third-party/jsoncpp \
    && mkdir $INSTALLDIR/include/userspace/libsinsp/third-party/jsoncpp/json \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libsinsp/third-party/jsoncpp/json/*.h $INSTALLDIR/include/userspace/libsinsp/third-party/jsoncpp/json \
    && mkdir $INSTALLDIR/include/userspace/libscap/compat \
    && cp $EXT_BUILD_ROOT/external/agent-libs/userspace/libscap/compat/*.h $INSTALLDIR/include/userspace/libscap/compat \
    && mkdir $INSTALLDIR/include/common \
    && cp $EXT_BUILD_ROOT/external/agent-libs/common/*.h $INSTALLDIR/include/common \
    && mkdir $INSTALLDIR/include/tbb \
    && cp ./tbb-prefix/src/tbb/include/tbb/*.h $INSTALLDIR/include/tbb \
    && mkdir $INSTALLDIR/include/tbb/compat \
    && cp ./tbb-prefix/src/tbb/include/tbb/compat/*.h $INSTALLDIR/include/tbb/compat \
    && mkdir $INSTALLDIR/include/tbb/internal \
    && cp ./tbb-prefix/src/tbb/include/tbb/internal/*.h $INSTALLDIR/include/tbb/internal \
    && mkdir $INSTALLDIR/include/tbb/machine \
    && cp ./tbb-prefix/src/tbb/include/tbb/machine/*.h $INSTALLDIR/include/tbb/machine \
    && mkdir $INSTALLDIR/include/driver \
    && mkdir $INSTALLDIR/include/driver/bpf \
    && cp $EXT_BUILD_ROOT/external/agent-libs/driver/*.h $INSTALLDIR/include/driver \
    && cp $EXT_BUILD_ROOT/external/agent-libs/driver/bpf/*.h $INSTALLDIR/include/driver/bpf \
     ",
    out_static_libs = ["libsinsp.a", "libscap.a", "libtbb.a", "libtbbmalloc.a"],
)



